{% extends 'base.html.twig' %}

{% block title %}User Dashboard{% endblock %}

{% block body %}
    <div class="container-fluid">
        <div class="row mt-4">
            {% include 'user/_sidebaruser.html.twig' %}
            <div class="col-lg-10">
                <!-- Main Content -->

                <div class="container mt-5">
                    <div class="row justify-content-center">
                        <div class="col-md-6">
                            <h1 class="text-center mb-4">Create Template</h1>
                            <form action="{{ path('template_create') }}" method="post" enctype="multipart/form-data">
                                <!-- CSRF Token -->
                                <input type="hidden" name="_csrf_token" value="{{ csrf_token('form') }}">

                                <!-- Title Input -->
                                <div class="mb-3">
                                    <label for="title" class="form-label">Template Title</label>
                                    <input type="text" class="form-control" id="title" name="title" placeholder="Enter the title of the template" required>
                                </div>

                                <!-- Description Input -->
                                <div class="mb-3">
                                    <label for="description" class="form-label">Template Description</label>
                                    <textarea id="description" name="description"></textarea>
                                </div>

                                <!-- Topic Dropdown -->
                                <div class="mb-3">
                                    <label for="topic" class="form-label">Select Topic</label>
                                    <select id="topic" name="topic" class="form-select" required>
                                        <option value="">Loading topics...</option>
                                    </select>
                                </div>

                                <!-- Tags -->
                                <div class="mb-3">
                                    <label for="tag-input" class="form-label">Tags</label>
                                    <input type="text" id="tag-input" class="form-control" placeholder="Start typing to search tags...">
                                    <div class="tag-list" id="tag-list"></div>
                                    <input type="hidden" name="tags" id="tags-hidden">
                                </div>

                                <!-- Image Upload -->
                                <div class="mb-3">
                                    <label class="form-label">Upload Image</label>
                                    <div id="dropzone" class="dropzone border rounded bg-light p-3 text-center">
{#                                        <p>Drag an image here or click to select</p>#}
                                    </div>
                                    <input type="file" name="image" id="image-input" hidden  accept="image/*" />
                                    <small class="text-muted">Optional image attachment for this template.</small>
                                </div>


                                <!-- Submit Button -->
                                <div class="text-center">
                                    <button type="submit" class="btn btn-primary">Create Template</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

            </div> <!-- close col-lg-10 -->
        </div> <!-- close row -->
    </div> <!-- close container-fluid -->


{#    <-- CSS & JS for EasyMDE (Markdown Editor) -->#}

    <style>
        .tag-list {
            margin-top: 10px;
        }
        .tag-item {
            display: inline-block;
            background-color: #0d6efd;
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            margin: 3px;
        }
        .tag-item .remove-tag {
            margin-left: 8px;
            font-weight: bold;
            cursor: pointer;
        }
    </style>

    {# EasyMDE CSS & JS CDN #}
        <link rel="stylesheet" href="https://unpkg.com/easymde/dist/easymde.min.css">
        <script src="https://unpkg.com/easymde/dist/easymde.min.js"></script>

    <link href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" rel="stylesheet" />

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.13.2/themes/base/jquery-ui.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.9.3/min/dropzone.min.js"></script>


    {# EasyMDE Initialization #}
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                new EasyMDE({
                    element: document.getElementById("description"),
                    spellChecker: false,
                    placeholder: "Enter the description in markdown...",
                    status: false
                });
            });
        </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Load Topics via AJAX
            fetch("{{ path('template_ajax_topics') }}")
                .then(response => response.json())
                .then(data => {
                    const topicSelect = document.getElementById("topic");
                    topicSelect.innerHTML = '<option value="">-- Select Topic --</option>';
                    data.forEach(topic => {
                        const option = document.createElement("option");
                        option.value = topic.name;
                        option.textContent = topic.name;
                        topicSelect.appendChild(option);
                    });
                })
                .catch(() => {
                    const topicSelect = document.getElementById("topic");
                    topicSelect.innerHTML = '<option value="">Failed to load topics</option>';
                });
        });
    </script>

    <script>
        $(document).ready(function () {
            const $tagInput = $('#tag-input');
            const $tagList = $('#tag-list');
            const $tagsHidden = $('#tags-hidden');

            let selectedTags = [];

            function renderTags() {
                $tagList.empty();
                selectedTags.forEach(function (tag) {
                    const $tagElem = $('<span class="tag-item"></span>').text(tag);
                    const $removeBtn = $('<span class="remove-tag">&times;</span>');
                    $removeBtn.on('click', function () {
                        selectedTags = selectedTags.filter(t => t !== tag);
                        renderTags();
                    });
                    $tagElem.append($removeBtn);
                    $tagList.append($tagElem);
                });
                $tagsHidden.val(selectedTags.join(','));
            }

            $tagInput.autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "{{ path('template_tag_search') }}", // Make sure this path is valid in your routes
                        dataType: 'json',
                        data: {
                            term: request.term
                        },
                        success: function (data) {
                            response(data.map(item => item.text));
                        },
                        error: function () {
                            console.error('Autocomplete AJAX failed');
                        }
                    });
                },
                select: function (event, ui) {
                    if (!selectedTags.includes(ui.item.value)) {
                        selectedTags.push(ui.item.value);
                        renderTags();
                    }
                    $tagInput.val('');
                    return false;
                },
                minLength: 1
            });

            $tagInput.on('keydown', function (e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    const val = $tagInput.val().trim();
                    if (val && !selectedTags.includes(val)) {
                        selectedTags.push(val);
                        renderTags();
                        $tagInput.val('');
                    }
                }
            });
        });
    </script>

    <script>
        // Dropzone config
        Dropzone.autoDiscover = false;
        const dropzone = new Dropzone("#dropzone", {
            url: "#", // Form handles submission
            autoProcessQueue: false,
            maxFiles: 1,
            clickable: true,
            acceptedFiles: "image/*",
            addRemoveLinks: true,
            init: function () {
                this.on("addedfile", file => {
                    const dt = new DataTransfer();
                    dt.items.add(file);
                    document.querySelector("#image-input").files = dt.files;

                    if (this.files.length > 1) {
                        this.removeFile(this.files[0]);
                    }
                });
                this.on("removedfile", () => {
                    document.querySelector("#image-input").value = "";
                });
            }
        });

    </script>




{% endblock %}
