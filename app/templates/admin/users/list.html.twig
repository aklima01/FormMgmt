{% extends 'base.html.twig' %}

{% block title %}User Management{% endblock %}

{% block body %}
    <h1>User Management</h1>

    <form method="post" action="{{ path('admin_users_bulk_action') }}" id="bulk-action-form">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <div class="btn-group" role="group" aria-label="User actions">
                <button type="button" name="action" value="block" class="btn btn-outline-primary btn-sm d-flex align-items-center gap-1">
                    <i class="bi bi-slash-circle"></i> Block
                </button>
                <button type="button" name="action" value="unblock" class="btn btn-outline-success btn-sm d-flex align-items-center gap-1">
                    <i class="bi bi-check-circle"></i> Unblock
                </button>
                <button type="button" name="action" value="make_admin" class="btn btn-outline-primary btn-sm d-flex align-items-center gap-1">
                    <i class="bi bi-person-plus"></i> Make Admin
                </button>
                <button type="button" name="action" value="remove_admin" class="btn btn-outline-secondary btn-sm d-flex align-items-center gap-1">
                    <i class="bi bi-person-dash"></i> Remove Admin
                </button>
                <button type="button" name="action" value="delete" class="btn btn-outline-danger btn-sm d-flex align-items-center gap-1"
                        onclick="return confirm('Are you sure you want to delete the selected users?');">
                    <i class="bi bi-trash"></i> Delete
                </button>
            </div>
        </div>


        <table id="users-table" class="table table-bordered table-hover" style="width:100%">
            <thead class="table-light">
            <tr>
                <th><input type="checkbox" id="select-all"></th>
                <th>Name</th>
                <th>Email</th>
                <th>Status</th>
                <th>Roles</th>
                <th>Created At</th>
            </tr>
            </thead>
        </table>

        {# Hidden input to store selected user IDs for bulk actions #}
        <input type="hidden" name="user_ids" id="user_ids_input">
    </form>

    <link rel="stylesheet" href="https://cdn.datatables.net/2.3.2/css/dataTables.dataTables.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.2/js/dataTables.min.js"></script>

    <script>
        $(document).ready(function() {
            const table = $('#users-table').DataTable({
                serverSide: true,
                processing: true,
                ajax: "{{ path('admin_users_ajax') }}",
                columns: [
                    {
                        data: 'id',
                        orderable: false,
                        searchable: false,
                        render: function(data, type, row) {
                            return '<input type="checkbox" class="user-checkbox" value="' + data + '">';
                        }
                    },
                    { data: 'name' },
                    { data: 'email' },
                    {
                        data: 'status',
                        render: function(data) {
                            if (data === 'active') {
                                return '<span class="badge bg-success">Active</span>';
                            } else if (data === 'blocked') {
                                return '<span class="badge bg-danger">Blocked</span>';
                            } else {
                                return '<span class="badge bg-secondary">' + data + '</span>';
                            }
                        }
                    },
                    { data: 'roles',orderable: false },
                    { data: 'createdAt' }
                ],
                order: [[1, 'asc']],
                lengthMenu: [10, 25, 50, 100],
                pageLength: 10,
                drawCallback: function() {
                    $('#select-all').prop('checked', false);
                    $('#select-all').prop('indeterminate', false);
                }
            });

            // Track selected users in a Set
            let selectedUsers = new Set();

            // Handle click on checkbox in table rows
            $('#users-table tbody').on('change', '.user-checkbox', function() {
                const id = $(this).val();
                if (this.checked) {
                    selectedUsers.add(id);
                } else {
                    selectedUsers.delete(id);
                }
                updateSelectedInput();
                updateSelectAllCheckbox();
            });

            // Handle click on "select all" checkbox
            $('#select-all').on('change', function() {
                const isChecked = this.checked;
                $('.user-checkbox').each(function() {
                    $(this).prop('checked', isChecked);
                    const id = $(this).val();
                    if (isChecked) {
                        selectedUsers.add(id);
                    } else {
                        selectedUsers.delete(id);
                    }
                });
                updateSelectedInput();
            });

            function updateSelectedInput() {
                $('#user_ids_input').val(Array.from(selectedUsers).join(','));
            }

            function updateSelectAllCheckbox() {
                const allChecked = $('.user-checkbox').length === $('.user-checkbox:checked').length;
                const someChecked = $('.user-checkbox:checked').length > 0;
                $('#select-all').prop('checked', allChecked);
                $('#select-all').prop('indeterminate', someChecked && !allChecked);
            }

            // On form submit, convert selected users set to hidden input
            $('#bulk-action-form').on('submit', function(e) {
                if(selectedUsers.size === 0) {
                    alert('Please select at least one user.');
                    e.preventDefault();
                    return false;
                }
                updateSelectedInput();
            });
        });
    </script>
{% endblock %}
